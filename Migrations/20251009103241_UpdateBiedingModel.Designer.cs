// <auto-generated />
using System;
using FloresFuertes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FloresFuertes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009103241_UpdateBiedingModel")]
    partial class UpdateBiedingModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FloresFuertes.Models.Bieding", b =>
                {
                    b.Property<string>("Bieding_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Bedrag")
                        .HasColumnType("real");

                    b.Property<string>("Klant_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Product_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Tijdstip")
                        .HasColumnType("datetime2");

                    b.HasKey("Bieding_Id");

                    b.HasIndex("Klant_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Biedingen");
                });

            modelBuilder.Entity("FloresFuertes.Models.Gebruiker", b =>
                {
                    b.Property<string>("Gebruiker_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GebruikerType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Telefoonnr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Woonplaats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Gebruiker_Id");

                    b.ToTable("Gebruikers");

                    b.HasDiscriminator<string>("GebruikerType").HasValue("Gebruiker");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FloresFuertes.Models.Product", b =>
                {
                    b.Property<string>("Product_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Aanvoerder_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtikelKenmerken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hoeveelheid")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StartPrijs")
                        .HasColumnType("real");

                    b.HasKey("Product_Id");

                    b.ToTable("Producten");
                });

            modelBuilder.Entity("FloresFuertes.Models.Veiling", b =>
                {
                    b.Property<string>("Veiling_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EindTijd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kloklocatie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTijd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("VeilingDatum")
                        .HasColumnType("date");

                    b.Property<float>("VeilingPrijs")
                        .HasColumnType("real");

                    b.Property<string>("Veilingmeester_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Veiling_Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("Veilingmeester_Id");

                    b.ToTable("Veilingen");
                });

            modelBuilder.Entity("FloresFuertes.Models.Aanvoerder", b =>
                {
                    b.HasBaseType("FloresFuertes.Models.Gebruiker");

                    b.HasDiscriminator().HasValue("Aanvoerder");
                });

            modelBuilder.Entity("FloresFuertes.Models.Klant", b =>
                {
                    b.HasBaseType("FloresFuertes.Models.Gebruiker");

                    b.Property<float>("Saldo")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("Klant");
                });

            modelBuilder.Entity("FloresFuertes.Models.Veilingmeester", b =>
                {
                    b.HasBaseType("FloresFuertes.Models.Gebruiker");

                    b.HasDiscriminator().HasValue("Veilingmeester");
                });

            modelBuilder.Entity("FloresFuertes.Models.Bieding", b =>
                {
                    b.HasOne("FloresFuertes.Models.Klant", "Klant")
                        .WithMany()
                        .HasForeignKey("Klant_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FloresFuertes.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FloresFuertes.Models.Veiling", b =>
                {
                    b.HasOne("FloresFuertes.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FloresFuertes.Models.Veilingmeester", "Veilingmeester")
                        .WithMany()
                        .HasForeignKey("Veilingmeester_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Veilingmeester");
                });
#pragma warning restore 612, 618
        }
    }
}
